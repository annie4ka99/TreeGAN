 private void siftDown(int position, OptimizerBoardPosition boardPosition) { int half = count >>> 1; while (position < half) { int childIndex = (position << 1) + 1; OptimizerBoardPosition child = queue[childIndex]; int rightChildIndex = childIndex + 1; if (rightChildIndex < count && child.compareTo(queue[rightChildIndex]) > 0) child = queue[childIndex = rightChildIndex]; if (boardPosition.compareTo(child) <= 0) break; queue[position] = child; position = childIndex; } queue[position] = boardPosition; } 